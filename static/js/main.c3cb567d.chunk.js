(this["webpackJsonplibrary-doc-components"]=this["webpackJsonplibrary-doc-components"]||[]).push([[0],[,,,,,function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var r=t(0),a=t.n(r);var o=function(e){var n=e.htmlFor,t=e.label,r=e.required;return a.a.createElement("label",{style:{display:"block"},htmlFor:n},t," ",r&&a.a.createElement("span",{style:{color:"red"}}," *"))}},function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var r=t(1),a=t(2),o=t(4),s=t(3),i=t(0),l=t.n(i),p=function(e){Object(o.a)(t,e);var n=Object(s.a)(t);function t(){var e;Object(r.a)(this,t);for(var a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];return(e=n.call.apply(n,[this].concat(o))).getColor=function(n){return 100===e.props.percent?"green":e.props.percent>50?"lightgreen":"red"},e.getWidthAsPercentOfTotalWidth=function(){return parseInt(e.props.width*(e.props.percent/100),10)},e}return Object(a.a)(t,[{key:"render",value:function(){var e=this.props,n=e.percent,t=e.width,r=e.height;return l.a.createElement("div",{style:{border:"solid\xa01px\xa0lightgray",width:t}},l.a.createElement("div",{style:{width:this.getWidthAsPercentOfTotalWidth(),height:r,backgroundColor:this.getColor(n)}}))}}]),t}(l.a.Component);p.defaultProps={height:5};var u=p},function(e,n,t){"use strict";t.d(n,"a",(function(){return i}));var r=t(8),a=t(0),o=t.n(a),s=t(5);var i=function(e){var n=e.htmlId,t=e.name,a=e.label,i=e.type,l=void 0===i?"text":i,p=e.required,u=void 0!==p&&p,d=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,y=Object(r.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{style:{marginBottom:16}},o.a.createElement(s.a,{htmlFor:n,label:a,required:u}),o.a.createElement("input",Object.assign({id:n,type:l,name:t,placeholder:c,value:m,onChange:d,style:h&&{border:"solid 1px red"}},y)),g,h&&o.a.createElement("div",{className:"error",style:{color:"red"}},h))}},,function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var r=t(0),a=t.n(r),o=function(){return a.a.createElement("svg",{width:"16",height:"16",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22"},a.a.createElement("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d"},a.a.createElement("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),a.a.createElement("circle",{cx:"466.08",cy:"466.02",r:"134.5"})))}},function(e,n,t){"use strict";t.d(n,"a",(function(){return h}));var r=t(8),a=t(1),o=t(2),s=t(4),i=t(3),l=t(0),p=t.n(l),u=t(6),d=t(9),c=t(7),m=function(e){Object(s.a)(t,e);var n=Object(i.a)(t);function t(e){var r;return Object(a.a)(this,t),(r=n.call(this,e)).toggleShowPassword=function(e){r.setState((function(e){return{showPassword:!e.showPassword}})),e&&e.preventDefault()},r.state={showPassword:!1},r}return Object(o.a)(t,[{key:"render",value:function(){var e=this.props,n=e.htmlId,t=e.value,a=e.label,o=e.error,s=e.onChange,i=e.placeholder,l=e.maxLength,m=e.showVisibilityToggle,h=e.quality,g=Object(r.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),y=this.state.showPassword;return p.a.createElement(c.a,Object.assign({htmlId:n,label:a,placeholder:i,type:y?"text":"password",onChange:s,value:t,maxLength:l,error:o,required:!0},g),m&&p.a.createElement("a",{href:"#",onClick:this.toggleShowPassword,style:{marginLeft:5}},p.a.createElement(d.a,null)),t.length>0&&h&&p.a.createElement(u.a,{percent:h,width:130}))}}]),t}(p.a.Component);m.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"};var h=m},function(e,n,t){e.exports={error:"textInput_error__r7LpN",inputError:"textInput_inputError__2pecQ",fieldset:"textInput_fieldset__12mau"}},function(e,n){e.exports=[{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from \'react\';\n\n/** SVG Eye Icon */\nconst EyeIcon = () => {\n  // Attribution: Fabi\xe1n Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\n  return (\n    <svg width="16" height="16" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22">\n      <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\n        <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\n        <circle cx="466.08" cy="466.02" r="134.5" />\n      </g>\n    </svg>\n  )\n}\n\nexport default EyeIcon;\n',examples:[{name:"ExampleEyeIcon",description:"",code:"import React from 'react';\nimport EyeIcon from 'ps-react/EyeIcon';\n\n\nconst ExampleEyeIcon = () => {\n  return (<EyeIcon />);\n}\n\nexport default ExampleEyeIcon;\n"}]},{name:"HelloWorld",description:"A super lame component that says Hello with a custom message.",props:{message:{type:{name:"string"},required:!1,description:"Messge to display"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** A super lame component that says Hello with a custom message. */\nconst HelloWorld = ({message}) => {\n  return ( \n    <div>Hello World {message}</div>\n   );\n}\n \nHelloWorld.propTypes ={\n  /** Messge to display */\n  message: PropTypes.string\n};\n\nHelloWorld.defultProps ={\n  message: \"World\"\n};\n\nexport default HelloWorld;\n",examples:[{name:"ExampleHelloWorld",description:"Custom message",code:"import React from 'react';\nimport HelloWorld from 'ps-react/HelloWorld';\n\n/** Custom message */\nexport default function ExampleHelloWorld() {\n  return <HelloWorld message=\"Pluralsight viewers!\" />\n}\n"}]},{name:"Label",description:"Label with required field display, htmlFor, and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:"HTML ID for associated input"},label:{type:{name:"string"},required:!0,description:"Label text"},required:{type:{name:"bool"},required:!1,description:"Display asterisk after label if true"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({ htmlFor, label, required }) {\n  return (\n    <label style={{ display: 'block' }} htmlFor={htmlFor}>\n      {label} { required && <span style={{ color: 'red' }}> *</span>}\n    </label>\n  )\n}\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Label text */\n  label: PropTypes.string.isRequired,\n\n  /** Display asterisk after label if true */\n  required: PropTypes.bool\n};\n\nexport default Label;\n",examples:[{name:"ExampleOptionalLabel",description:"Optional Label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Optional Label */\nconst ExampleOptionalLabel = () => {\n  return (<Label htmlFor=\"test\" label=\"test\" />);\n}\n\nexport default ExampleOptionalLabel;\n"},{name:"ExampleRequiredLabel",description:"Required Label",code:"import React from 'react';\nimport Label from 'ps-react/Label';\n\n/** Required Label */\nconst ExampleRequiredLabel = () => {\n  return (<Label htmlFor=\"test\" label=\"test\" required />);\n}\n\nexport default ExampleRequiredLabel;\n"}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    }\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n    if (event) event.preventDefault();\n  }\n\n  render() {\n    const { htmlId, value, label, error, onChange, placeholder, maxLength,\n      showVisibilityToggle, quality, ...props } = this.props;\n      \n    const { showPassword } = this.state;\n\n    return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? 'text' : 'password'}\n        onChange={onChange}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...props}>\n        {\n          showVisibilityToggle &&\n          <a\n            href=\"#\"\n            onClick={this.toggleShowPassword}\n            style={{ marginLeft: 5 }}>\n            <EyeIcon />\n          </a>\n        }\n        {\n          value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n        }\n      </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n};\n\nexport default PasswordInput;\n",examples:[{name:"ExampleAllFeatures",description:"All features enabled",code:"import React from 'react';\nimport PasswordInput from 'ps-react/PasswordInput';\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: ''\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId=\"password-input-example-all-features\"\n          name=\"password\"\n          onChange={ event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder=\"Enter password\"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default ExampleAllFeatures;\n"}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Bar width"},height:{type:{name:"number"},required:!1,description:"Bar height",defaultValue:{value:"5",computed:!1}}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass\xa0ProgressBar\xa0extends\xa0React.Component\xa0{\n\xa0\xa0getColor\xa0=\xa0(percent)\xa0=>\xa0{\n\xa0\xa0\xa0\xa0if\xa0(this.props.percent\xa0===\xa0100)\xa0return\xa0'green';\n\xa0\xa0\xa0\xa0return\xa0this.props.percent\xa0>\xa050\xa0?\xa0'lightgreen'\xa0:\xa0'red';\n\xa0\xa0}\n\n  getWidthAsPercentOfTotalWidth = () => {\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\n  }\n\n\xa0\xa0render()\xa0{\n  \n\xa0\xa0\xa0\xa0const\xa0{percent,\xa0width,\xa0height}\xa0=\xa0this.props;\n\n\xa0\xa0\xa0\xa0return\xa0(\n\xa0\xa0\xa0\xa0\xa0\xa0<div\xa0style={{border:\xa0'solid\xa01px\xa0lightgray',\xa0width:\xa0width}}>\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0<div\xa0style={{\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0width:\xa0this.getWidthAsPercentOfTotalWidth(),\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0height,\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0backgroundColor:\xa0this.getColor(percent)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0}}\xa0/>\n\xa0\xa0\xa0\xa0\xa0\xa0</div>\n\xa0\xa0\xa0\xa0);\n\xa0\xa0}\n}\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n  height: 5\n};\n\nexport default ProgressBar;\n",examples:[{name:"Example100Percent",description:"100% Progress and height 20px",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 100% Progress and height 20px */\nconst Example100Percent = () => {\n  return (<ProgressBar percent={100} width={150} height={20} />);\n}\n\nexport default Example100Percent;\n"},{name:"Example10Percent",description:"10% Progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 10% Progress */\nconst Example10Percent = () => {\n  return (<ProgressBar percent={10} width={150} />);\n}\n\nexport default Example10Percent;\n"},{name:"Example70Percent",description:"70% Progress",code:"import React from 'react';\nimport ProgressBar from 'ps-react/ProgressBar';\n\n/** 70% Progress */\nconst Example70Percent = () => {\n  return (<ProgressBar percent={70} width={150} />);\n}\n\nexport default Example70Percent;\n"}]},{name:"RegistrationForm",description:"Registration form with built-in validation.",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:'import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport TextInput from \'../TextInput\';\nimport PasswordInput from \'../PasswordInput\';\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: \'\',\n        password: \'\'\n      },\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  onChange = (event) => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({user});\n  }\n\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  passwordQuality(password) {\n    if (!password) return null;\n    if (password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(password.length/this.props.minPasswordLength * 100, 10);\n    return percentOfMinLength;\n  }\n\n  validate({email, password}) {\n    const errors = {};\n    const {minPasswordLength} = this.props;\n\n    if (!email) errors.email = \'Email required.\';\n    if (password.length < minPasswordLength) errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n    this.setState({errors});\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const {user} = this.state;\n    const formIsValid = this.validate(user);\n    if (formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({submitted: true});\n    }\n  }\n\n  render() {\n    const {errors, submitted} = this.state;\n    const {email, password} = this.state.user;\n\n    return (\n      submitted ?\n      <h2>{this.props.confirmationMessage}</h2> :\n      <div>\n        <TextInput\n          htmlId="registration-form-email"\n          name="email"\n          onChange={this.onChange}\n          label="Email"\n          value={email}\n          error={errors.email}\n          required />\n\n        <PasswordInput\n          htmlId="registration-form-password"\n          name="password"\n          value={password}\n          onChange={this.onChange}\n          quality={this.passwordQuality(password)}\n          showVisibilityToggle\n          maxLength={50}\n          error={errors.password} />\n\n        <input type="submit" value="Register" onClick={this.onSubmit} />\n      </div>\n    )\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n}\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: "Thanks for registering!",\n  minPasswordLength: 8\n};\n\nexport default RegistrationForm;\n',examples:[{name:"ExampleRegistrationForm",description:"",code:"import React from 'react';\nimport RegistrationForm from 'ps-react/RegistrationForm';\n\nexport default class ExampleRegistrationForm extends React.Component {\n  onSubmit = (user) => {\n    console.log(user); \n  }\n\n  render() {\n    return <RegistrationForm onSubmit={this.onSubmit} />\n  }\n}\n"}]},{name:"TextInput",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({ htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props }) {\n  return (\n    <div style={{ marginBottom: 16 }}>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        style={error && { border: 'solid 1px red' }}\n        {...props} />\n      {children}\n      {error && <div className=\"error\" style={{ color: 'red' }}>{error}</div>}\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInput from \'ps-react/TextInput\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInput\n        htmlId="example-error"\n        label="First Name"\n        name="firstname"\n        onChange={() => {}}\n        required\n        error="First name is required."\n       />\n    )\n  }\n}\n'},{name:"ExampleOptional",description:"Optional TextBox",code:'import React from \'react\';\nimport TextInput from \'ps-react/TextInput\';\n\n/** Optional TextBox */\nconst ExampleOptional = () => {\n  return (\n    <TextInput\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => { }}\n    />);\n}\n\nexport default ExampleOptional;\n'}]},{name:"TextInputBEM",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props}) {\n  return (\n    <div className=\"textinput\">\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={error && 'textinput__input--state-error'}\n        {...props}/>\n        {children}\n      {error && <div className=\"textinput__error\">{error}</div>}\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputBEM from \'ps-react/TextInputBEM\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputBEM\n        htmlId="example-optional"\n        label="First Name"\n        name="firstname"\n        onChange={() => {}}\n        required\n        error="First name is required."\n       />\n    )\n  }\n}\n'}]},{name:"TextInputCSSModules",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\nimport styles from './textInput.module.css';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nfunction TextInput({ htmlId, name, label, type = \"text\", required = false, onChange, placeholder, value, error, children, ...props }) {\n  return (\n    <div className={styles.fieldset}>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={error && styles.inputError}\n        {...props} />\n      {children}\n      {error && <div className={styles.error}>{error}</div>}\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from \'react\';\nimport TextInputCSSModules from \'ps-react/TextInputCSSModules\';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInputCSSModules\n        htmlId="example-optional"\n        label="First Name"\n        name="firstname"\n        onChange={() => {}}\n        required\n        error="First name is required."\n       />\n    )\n  }\n}\n'}]}]},,,function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(9);n.default=function(){return a.a.createElement(o.a,null)}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(5);n.default=function(){return a.a.createElement(o.a,{htmlFor:"test",label:"test"})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(5);n.default=function(){return a.a.createElement(o.a,{htmlFor:"test",label:"test",required:!0})}},function(e,n,t){"use strict";t.r(n);var r=t(1),a=t(2),o=t(4),s=t(3),i=t(0),l=t.n(i),p=t(10),u=function(e){Object(o.a)(t,e);var n=Object(s.a)(t);function t(e){var a;return Object(r.a)(this,t),(a=n.call(this,e)).state={password:""},a}return Object(a.a)(t,[{key:"getQuality",value:function(){var e=this.state.password.length;return e>10?100:10*e}},{key:"render",value:function(){var e=this;return l.a.createElement("div",null,l.a.createElement(p.a,Object.assign({htmlId:"password-input-example-all-features",name:"password",onChange:function(n){return e.setState({password:n.target.value})},value:this.state.password,minLength:8,placeholder:"Enter password",showVisibilityToggle:!0,quality:this.getQuality()},this.props)))}}]),t}(l.a.Component);n.default=u},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(6);n.default=function(){return a.a.createElement(o.a,{percent:100,width:150,height:20})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(6);n.default=function(){return a.a.createElement(o.a,{percent:10,width:150})}},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(6);n.default=function(){return a.a.createElement(o.a,{percent:70,width:150})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var r=t(1),a=t(2),o=t(4),s=t(3),i=t(0),l=t.n(i),p=t(7),u=function(e){Object(o.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement(p.a,{htmlId:"example-error",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),t}(l.a.Component)},function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(7);n.default=function(){return a.a.createElement(o.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return m}));var r=t(1),a=t(2),o=t(4),s=t(3),i=t(0),l=t.n(i),p=t(7),u=t(10),d=function(e){Object(o.a)(t,e);var n=Object(s.a)(t);function t(e){var a;return Object(r.a)(this,t),(a=n.call(this,e)).onChange=function(e){var n=a.state.user;n[e.target.name]=e.target.value,a.setState({user:n})},a.onSubmit=function(){var e=a.state.user;a.validate(e)&&(a.props.onSubmit(e),a.setState({submitted:!0}))},a.state={user:{email:"",password:""},errors:{},submitted:!1},a}return Object(a.a)(t,[{key:"passwordQuality",value:function(e){return e?e.length>=this.props.minPasswordLength?100:parseInt(e.length/this.props.minPasswordLength*100,10):null}},{key:"validate",value:function(e){var n=e.email,t=e.password,r={},a=this.props.minPasswordLength;return n||(r.email="Email required."),t.length<a&&(r.password="Password must be at least ".concat(a," characters.")),this.setState({errors:r}),0===Object.getOwnPropertyNames(r).length}},{key:"render",value:function(){var e=this.state,n=e.errors,t=e.submitted,r=this.state.user,a=r.email,o=r.password;return t?l.a.createElement("h2",null,this.props.confirmationMessage):l.a.createElement("div",null,l.a.createElement(p.a,{htmlId:"registration-form-email",name:"email",onChange:this.onChange,label:"Email",value:a,error:n.email,required:!0}),l.a.createElement(u.a,{htmlId:"registration-form-password",name:"password",value:o,onChange:this.onChange,quality:this.passwordQuality(o),showVisibilityToggle:!0,maxLength:50,error:n.password}),l.a.createElement("input",{type:"submit",value:"Register",onClick:this.onSubmit}))}}]),t}(l.a.Component);d.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var c=d,m=function(e){Object(o.a)(t,e);var n=Object(s.a)(t);function t(){var e;Object(r.a)(this,t);for(var a=arguments.length,o=new Array(a),s=0;s<a;s++)o[s]=arguments[s];return(e=n.call.apply(n,[this].concat(o))).onSubmit=function(e){console.log(e)},e}return Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement(c,{onSubmit:this.onSubmit})}}]),t}(l.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return h}));var r=t(1),a=t(2),o=t(4),s=t(3),i=t(0),l=t.n(i),p=t(8),u=t(5),d=t(11),c=t.n(d);var m=function(e){var n=e.htmlId,t=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,s=e.required,i=void 0!==s&&s,d=e.onChange,m=e.placeholder,h=e.value,g=e.error,y=e.children,f=Object(p.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return l.a.createElement("div",{className:c.a.fieldset},l.a.createElement(u.a,{htmlFor:n,label:r,required:i}),l.a.createElement("input",Object.assign({id:n,type:o,name:t,placeholder:m,value:h,onChange:d,className:g&&c.a.inputError},f)),y,g&&l.a.createElement("div",{className:c.a.error},g))},h=function(e){Object(o.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement(m,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),t}(l.a.Component)},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return i}));var r=t(0),a=t.n(r),o=function(e){var n=e.message;return a.a.createElement("div",null,"Hello World ",n)};o.defultProps={message:"World"};var s=o;function i(){return a.a.createElement(s,{message:"Pluralsight viewers!"})}},function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var r=t(1),a=t(2),o=t(4),s=t(3),i=t(0),l=t.n(i),p=(t(37),t(8)),u=t(5);var d=function(e){var n=e.htmlId,t=e.name,r=e.label,a=e.type,o=void 0===a?"text":a,s=e.required,i=void 0!==s&&s,d=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,y=Object(p.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return l.a.createElement("div",{className:"textinput"},l.a.createElement(u.a,{htmlFor:n,label:r,required:i}),l.a.createElement("input",Object.assign({id:n,type:o,name:t,placeholder:c,value:m,onChange:d,className:h&&"textinput__input--state-error"},y)),g,h&&l.a.createElement("div",{className:"textinput__error"},h))},c=function(e){Object(o.a)(t,e);var n=Object(s.a)(t);function t(){return Object(r.a)(this,t),n.apply(this,arguments)}return Object(a.a)(t,[{key:"render",value:function(){return l.a.createElement(d,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}}]),t}(l.a.Component)},,,function(e,n,t){e.exports=t(39)},,,,,function(e,n,t){},function(e,n,t){var r={"./EyeIcon/ExampleEyeIcon":15,"./EyeIcon/ExampleEyeIcon.js":15,"./HelloWorld/ExampleHelloWorld":26,"./HelloWorld/ExampleHelloWorld.js":26,"./Label/ExampleOptionalLabel":16,"./Label/ExampleOptionalLabel.js":16,"./Label/ExampleRequiredLabel":17,"./Label/ExampleRequiredLabel.js":17,"./PasswordInput/ExampleAllFeatures":18,"./PasswordInput/ExampleAllFeatures.js":18,"./ProgressBar/Example100Percent":19,"./ProgressBar/Example100Percent.js":19,"./ProgressBar/Example10Percent":20,"./ProgressBar/Example10Percent.js":20,"./ProgressBar/Example70Percent":21,"./ProgressBar/Example70Percent.js":21,"./RegistrationForm/ExampleRegistrationForm":24,"./RegistrationForm/ExampleRegistrationForm.js":24,"./TextInput/ExampleError":22,"./TextInput/ExampleError.js":22,"./TextInput/ExampleOptional":23,"./TextInput/ExampleOptional.js":23,"./TextInputBEM/ExampleError":27,"./TextInputBEM/ExampleError.js":27,"./TextInputCSSModules/ExampleError":25,"./TextInputCSSModules/ExampleError.js":25};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=36},function(e,n,t){},,function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),o=t(28),s=t.n(o),i=(t(35),t(1)),l=t(2),p=t(4),u=t(3),d=function(e){var n=e.components;return a.a.createElement("ul",{className:"navigation"},n.map((function(e){return a.a.createElement("li",{key:e},a.a.createElement("a",{href:"#".concat(e)},e))})))},c=t(13),m=t.n(c),h=t(29),g=t.n(h),y=function(e){Object(p.a)(t,e);var n=Object(u.a)(t);function t(){return Object(i.a)(this,t),n.apply(this,arguments)}return Object(l.a)(t,[{key:"componentDidMount",value:function(){m.a.registerLanguage("javascript",g.a),m.a.highlightBlock(this.element)}},{key:"render",value:function(){var e=this;return a.a.createElement("pre",{ref:function(n){e.element=n}},a.a.createElement("code",null,this.props.children))}}]),t}(a.a.Component),f=function(e){Object(p.a)(r,e);var n=Object(u.a)(r);function r(e){var t;return Object(i.a)(this,r),(t=n.call(this,e)).toggleCode=function(e){e.preventDefault(),t.setState((function(e){return{showCode:!e.showCode}}))},t.state={showCode:!1},t}return Object(l.a)(r,[{key:"render",value:function(){var e=this.state.showCode,n=this.props.example,r=n.code,o=n.description,s=n.name,i=t(36)("./".concat(this.props.componentName,"/").concat(s)).default;return a.a.createElement("div",{className:"example"},o&&a.a.createElement("h4",null,o),a.a.createElement(i,null),a.a.createElement("p",null,a.a.createElement("a",{href:"#",onClick:this.toggleCode},e?"Hide":"Show"," Code")),e&&a.a.createElement(y,null,r))}}]),r}(a.a.Component),b=function(e){var n=e.props;return a.a.createElement("table",{className:"props"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Default"),a.a.createElement("th",null,"Required"))),a.a.createElement("tbody",null,Object.keys(n).map((function(e){return a.a.createElement("tr",{key:e},a.a.createElement("td",null,e),a.a.createElement("td",null,n[e].description),a.a.createElement("td",null,n[e].type.name),a.a.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value),a.a.createElement("td",null,n[e].required&&"X"))}))))},w=function(e){var n=e.component,t=n.name,r=n.description,o=n.props,s=n.examples;return a.a.createElement("div",{className:"componentpage"},a.a.createElement("h2",null,t),a.a.createElement("p",null,r),a.a.createElement("h3",null,"Example",s.length>1&&"s"),s.length>0?s.map((function(e){return a.a.createElement(f,{key:e.name,example:e,componentName:t})})):"No examples exist.",a.a.createElement("h3",null,"Props"),o?a.a.createElement(b,{props:o}):"This component accepts no props.")},v=t(12),x=t.n(v),E=function(e){Object(p.a)(t,e);var n=Object(u.a)(t);function t(e){var r;return Object(i.a)(this,t),(r=n.call(this,e)).state={route:window.location.hash.substr(1)},r}return Object(l.a)(t,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",(function(){e.setState({route:window.location.hash.substr(1)})}))}},{key:"render",value:function(){var e=this.state.route,n=e?x.a.filter((function(n){return n.name===e}))[0]:x.a[0];return a.a.createElement("div",null,a.a.createElement(d,{components:x.a.map((function(e){return e.name}))}),a.a.createElement(w,{component:n}))}}]),t}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));t(38);s.a.render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(E,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[30,1,2]]]);
//# sourceMappingURL=main.c3cb567d.chunk.js.map